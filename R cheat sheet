#1.basic

#Check existing variables
ls()
objects()

#delete existing variables
rm(list=ls())

#check type of variable 变量类型
mode(x)

#delete variable
rm(x) #or rm("x")

##pipe library(magrittr) %>%

#2.read & write & find path

#get current working directory
getwd()
#set working directory
setwd()
#find searching path
search()
#add to searching path 
attach(mtcars)
#remove from searching path 
detach(mtcars)

#3. Help

help(setwd)
?mtcars
example(setwd)

## R is case sensitive

# NA= not Available
# check NA
is.na(x)
# NaN= not a Number
# check NaN
is.nan(x) #eg. 0/0 & inf-inf
#check infinite & check null
is.infinite() & is.null()

## R: Vector instead of scaler
is.vector(x)

#change variable type(to char)
as.charactor(x)

#4. Vectors in R
#define vector
v1<-c(1)
v2<-c(1,2,3,4)
v3<-c(v1,2,v2)
# get character from vector
v1[2]
v3[c(1,2)]

#check variable name
names(x)
#change var name
names(x)<-c("x")

#get sub-vector
#take out NAs
x<-x[!is.na(x)]
#conditional fulter
x<-x[x>5]
#filter by order(number set)
x<-x[1:3]
x<-x[c(1,2,3)]

#5.Sort & Order & Rank
x<-c(1,7,2,4,3,5,6)
sort(x)
# 1 2 3 4 5 6 7
rank(x)
# 1 7 2 4 3 5 6 (position in sorted x)
order(x)
#1(1) 3(2) 5(3) 4(4) 6(5) 7(6) 2(7) (position in x by sorted x)

# circlate change to vector 循环修改
v<-1:30
v<-v+1
v<-v+c(2,3,4)

#create vector 快速生成
V<-1:30
V<-seq(1,30,2) #from ,to ,by
V<-rep(0,20) 

#basic func
#count by freq
table()
#reverse vector
rev()
#unique value
unique()
#condition
any()
all()

#list (compared to vector can have different types of variables)
list1<-list(id="001",name="J",sex="G")
#get variables in list 列表分量读取
list1$id
list1[1]
list1[[1]]
#add or remove variable from list 列表分量新增删除
#add
list1$new<-2
#remove
list1$new<-NULL

#calculation func in lists
#count members
length(list1)
#check member names
names(list1)
#list to vector
unlist(list1)

#6.dataframe
#define dataframe 1.vector to df 2. df to df
df1<-data.frame(v1,v2,v3,v4,#stringAsFactors= TRUE (predefined)#)
#read column in df
df[1]
df[[1]]
df[,1]
#read rows in df
df[1,]
#head & tail
head(df,n) #n rows
#combine dataframes 合并
merge(df1,df2,by="x"#(inner/Outer/all.df1/all.df2=TRUE)
#order
df1[order(df$x1),]
#apply
lapply(df,sort) #sort by column

#Factors
t<-factor(t)
# t levels
t<-ordered(t)
#similar to above 
#check factor structure
str(t)
#check factor type(levels)
attr(t,"levels")
#factor based count by category 分类统计
v<-c()
c<-factor()
tapply(v,c,sum)
#vector split
s<-split(v,c)
str(s) #check structure


#7. Loop / If
#for loop
for (i in 1:n)
{
function
}
#while loop
i<-1
while(i<n)
{
function
}
#repeat
repeat{
if(i>n) break
}
#If
if (k>0){}
else {}
#switch
x<-"A"
y<-switch(x,A="X1",B="X2")

#speical operator
n^2 == n**2
n/m
n%/%2
n%%2
abs()
sqrt()
#round funct
floor()
ceiling()
trunc()
round()
exp()
log(n,base=x)

#8. Function
#9.String

str<-"xxx" # or 'xxxx'
substr(str,1)

#To upper/Lower case
toupper(str)
tolower(str)
#count number of characters
nchar(str)

#calculation
#connect strings
paste("string",str,sep="")
#stringxxx
#disconnect strings
strsplit(str.".",fixed=TRUE) #fixed=FALSE by default (regex second parameter)

#replacement in string  替换
sub("xxxx","yyy",str)
gsub("xxx","y",str)
#! difference between sub&gsub (sub: first occurence, gsub:all occurence) !#
grep("x",str)

#10.statistical method in r
mean()
median()
sd()
range()
sum()
max/min()
scale() #normalization

#random number in r
set.seed()
runif()
rnorm()
#package installation
if("cart" %in% rownames(installed.packages()))
{
local({r<-getOption("repos")
      r["CRAN"]<-"https:/mirros.tuna.tsinghua,edu,cn/CRAN/"
       options(repos=r)
}
install.packages("cart")
}

#11.Matrix in R
#define a matrix
matrix(1:50,nrow=5,ncol=10)
#select from matrix similar from df

#change colnames &rownames
matrix(1:50,nrow=5,ncol=10,dimnames=list(rownames,colnames))
#functions regarding matrix 矩阵处理函数
t(matrix) # transpose
diag() #diagnoal entries
eigen() #eigen vales&vectors
m1 %*% m1 #matrix production

#12.Array
#define an array
x<-1:6
array1<-array(x,dim=c(2,3))
#x remains the same / array column-order first 
#outer product 外积
arr1%o%arr2

#object oriented
class()

#S4 
#定义新类 set new class
setClass("VIP",slots=list(ID="character",counter="numeric",valid="logical"))
#泛型函数
setGeneric("count",function(object) standardGenreic("count"))
#注册到具体类
setMethod("count",signature(object="VIP"),function(object) object@counter+1)
#定义对象
vip1<-new("VIP",ID="007",...)
vip1@ID
count(vip1)
#类的继承
#判断是否存在
exists()
#删除
rm()

#13. Visualization in R
#basic plot functions
plot()
barplot()
boxplot()
vioplot()
pie()
hist()
spine()
#parameter
plot(x,y,main="",xlab="",ylab="",col="blue")
# straight line
abline() #after plot()
#curve
lines()
#add text
text(x,y,"?")

#14.REGEX in R (p276 p277)

#15. General R
data() #check all datasets in package
str() #check structure
#summary() # check summary

complete.cases() # show all without NAs / check NAs







